[{"C:\\Users\\My PC\\Desktop\\e-commerce\\src\\index.js":"1","C:\\Users\\My PC\\Desktop\\e-commerce\\src\\App.js":"2","C:\\Users\\My PC\\Desktop\\e-commerce\\src\\components\\Products\\Products.jsx":"3","C:\\Users\\My PC\\Desktop\\e-commerce\\src\\components\\Products\\Product\\Product.jsx":"4","C:\\Users\\My PC\\Desktop\\e-commerce\\src\\components\\Navbar\\Navbar.jsx":"5","C:\\Users\\My PC\\Desktop\\e-commerce\\src\\components\\Products\\Product\\styles.js":"6","C:\\Users\\My PC\\Desktop\\e-commerce\\src\\components\\Navbar\\styles.js":"7","C:\\Users\\My PC\\Desktop\\e-commerce\\src\\components\\Products\\styles.js":"8","C:\\Users\\My PC\\Desktop\\e-commerce\\src\\lib\\commerce.js":"9","C:\\Users\\My PC\\Desktop\\e-commerce\\src\\components\\Cart\\Cart.jsx":"10","C:\\Users\\My PC\\Desktop\\e-commerce\\src\\components\\Cart\\styles.js":"11","C:\\Users\\My PC\\Desktop\\e-commerce\\src\\components\\Cart\\CartItems\\CartItem.jsx":"12","C:\\Users\\My PC\\Desktop\\e-commerce\\src\\components\\CheckoutForm\\Checkout\\Checkout.jsx":"13","C:\\Users\\My PC\\Desktop\\e-commerce\\src\\components\\CheckoutForm\\Checkout\\styles.js":"14","C:\\Users\\My PC\\Desktop\\e-commerce\\src\\components\\CheckoutForm\\AddressForm.jsx":"15","C:\\Users\\My PC\\Desktop\\e-commerce\\src\\components\\CheckoutForm\\PaymentForm.jsx":"16","C:\\Users\\My PC\\Desktop\\e-commerce\\src\\components\\CheckoutForm\\CustomTextField.jsx":"17","C:\\Users\\My PC\\Desktop\\e-commerce\\src\\components\\CheckoutForm\\Review.jsx":"18","C:\\Users\\My PC\\Desktop\\e-commerce\\src\\components\\Cart\\CartItems\\styles.js":"19"},{"size":151,"mtime":1607709546775,"results":"20","hashOfConfig":"21"},{"size":3185,"mtime":1607710457404,"results":"22","hashOfConfig":"21"},{"size":730,"mtime":1607709088048,"results":"23","hashOfConfig":"21"},{"size":1326,"mtime":1607709185323,"results":"24","hashOfConfig":"21"},{"size":2495,"mtime":1607704161241,"results":"25","hashOfConfig":"21"},{"size":407,"mtime":1607622551494,"results":"26","hashOfConfig":"21"},{"size":1857,"mtime":1607704267992,"results":"27","hashOfConfig":"21"},{"size":326,"mtime":1607634425978,"results":"28","hashOfConfig":"21"},{"size":127,"mtime":1607635566465,"results":"29","hashOfConfig":"21"},{"size":1942,"mtime":1607706797383,"results":"30","hashOfConfig":"21"},{"size":679,"mtime":1607642579432,"results":"31","hashOfConfig":"21"},{"size":1388,"mtime":1607705335004,"results":"32","hashOfConfig":"21"},{"size":4212,"mtime":1607703668975,"results":"33","hashOfConfig":"21"},{"size":1382,"mtime":1607647103217,"results":"34","hashOfConfig":"21"},{"size":5330,"mtime":1607698494327,"results":"35","hashOfConfig":"21"},{"size":2953,"mtime":1607703293983,"results":"36","hashOfConfig":"21"},{"size":670,"mtime":1607700868331,"results":"37","hashOfConfig":"21"},{"size":1028,"mtime":1607698135564,"results":"38","hashOfConfig":"21"},{"size":389,"mtime":1607642635100,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"rzjvef",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"C:\\Users\\My PC\\Desktop\\e-commerce\\src\\index.js",[],"C:\\Users\\My PC\\Desktop\\e-commerce\\src\\App.js",[],"C:\\Users\\My PC\\Desktop\\e-commerce\\src\\components\\Products\\Products.jsx",[],"C:\\Users\\My PC\\Desktop\\e-commerce\\src\\components\\Products\\Product\\Product.jsx",[],"C:\\Users\\My PC\\Desktop\\e-commerce\\src\\components\\Navbar\\Navbar.jsx",[],["81","82"],"C:\\Users\\My PC\\Desktop\\e-commerce\\src\\components\\Products\\Product\\styles.js",[],"C:\\Users\\My PC\\Desktop\\e-commerce\\src\\components\\Navbar\\styles.js",[],"C:\\Users\\My PC\\Desktop\\e-commerce\\src\\components\\Products\\styles.js",[],"C:\\Users\\My PC\\Desktop\\e-commerce\\src\\lib\\commerce.js",[],"C:\\Users\\My PC\\Desktop\\e-commerce\\src\\components\\Cart\\Cart.jsx",[],"C:\\Users\\My PC\\Desktop\\e-commerce\\src\\components\\Cart\\styles.js",[],"C:\\Users\\My PC\\Desktop\\e-commerce\\src\\components\\Cart\\CartItems\\CartItem.jsx",[],"C:\\Users\\My PC\\Desktop\\e-commerce\\src\\components\\CheckoutForm\\Checkout\\Checkout.jsx",["83"],"import React, {useEffect, useState} from 'react';\r\nimport { Paper, Stepper, Step, StepLabel, Typography, CircularProgress, Divider, Button,CssBaseline} from \"@material-ui/core\";\r\nimport useStyles from \"./styles\";\r\nimport AddressForm from \"../AddressForm\";\r\nimport PaymentForm from \"../PaymentForm\";\r\nimport {commerce} from \"../../../lib/commerce\";\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\n\r\n\r\nconst steps = ['Shipping address', 'Payment details'];\r\n\r\nconst Checkout = ({ cart, handleCaptureCheckout, order, error }) => {\r\n    const [checkoutToken, setCheckoutToken] = useState(null);\r\n    const [activeStep, setActiveStep] = useState(0);\r\n    const [shippingData, setShippingData] = useState({});\r\n    const [isFinished, setIsFinished] = useState(false);\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        if (cart.id) {\r\n            const generateToken = async () => {\r\n                try {\r\n                    const token = await commerce.checkout.generateToken(cart.id, { type: 'cart' });\r\n\r\n                    setCheckoutToken(token);\r\n                } catch (error) {\r\n                    // if (activeStep !== steps.length)\r\n                        history.pushState('/');\r\n                }\r\n            };\r\n\r\n            generateToken();\r\n        }\r\n    }, [cart]);\r\n\r\n\r\n    const nextStep = () => setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    const backStep = () => setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n\r\n\r\n    const test = (data) => {\r\n        setShippingData(data);\r\n\r\n        nextStep();\r\n    };\r\n\r\n    const timeout = () => {\r\n        setTimeout(() => {\r\n            setIsFinished(true)\r\n        }, 3000);\r\n    }\r\n\r\n    let Confirmation = () => (order.customer ? (\r\n        <>\r\n            <div>\r\n                <Typography variant=\"h5\">Xaridingiz uchun raxmat, {order.customer.firstname} {order.customer.lastname}!</Typography>\r\n                <Divider className={classes.divider} />\r\n                <Typography variant=\"subtitle2\">Buyurtma ref: {order.customer_reference}</Typography>\r\n            </div>\r\n            <br />\r\n            <Button component={Link} variant=\"outlined\" type=\"button\" to=\"/\">Bosh Sahifa</Button>\r\n        </>\r\n    ) : isFinished ? (\r\n        <>\r\n            <div>\r\n                <Typography variant=\"h5\">Xaridingiz uchun raxmat, !</Typography>\r\n                <Divider className={classes.divider} />\r\n            </div>\r\n            <br />\r\n            <Button component={Link} variant=\"outlined\" type=\"button\" to=\"/\">Bosh Sahifa</Button>\r\n        </>\r\n    ) : (\r\n        <div className={classes.spinner}>\r\n            <CircularProgress />\r\n        </div>\r\n    ));\r\n    if (error) {\r\n        Confirmation = () => (\r\n            <>\r\n                <Typography variant=\"h5\">Xato: {error}</Typography>\r\n                <br />\r\n                <Button component={Link} variant=\"outlined\" type=\"button\" to=\"/\">Bosh Sahifa</Button>\r\n            </>\r\n        );\r\n    }\r\n    const Form = () => (activeStep === 0\r\n        ? <AddressForm checkoutToken={checkoutToken} nextStep={nextStep} setShippingData={setShippingData} test={test} />\r\n        : <PaymentForm checkoutToken={checkoutToken} nextStep={nextStep} backStep={backStep} shippingData={shippingData}\r\n                       onCaptureCheckout={handleCaptureCheckout} timeout={timeout}/>);\r\n    return (\r\n        <>\r\n            <CssBaseline />\r\n            <div className={classes.toolbar} />\r\n            <main className={classes.layout}>\r\n                <Paper className={classes.paper}>\r\n                    <Typography variant=\"h4\" align=\"center\">To'lov</Typography>\r\n                    <Stepper activeStep={activeStep} className={classes.stepper}>\r\n                        {steps.map((label) => (\r\n                            <Step key={label}>\r\n                                <StepLabel>{label}</StepLabel>\r\n                            </Step>\r\n                        ))}\r\n                    </Stepper>\r\n                    {activeStep === steps.length ? <Confirmation /> : checkoutToken && <Form />}\r\n                </Paper>\r\n            </main>\r\n        </>\r\n    );\r\n};\r\nexport default Checkout;","C:\\Users\\My PC\\Desktop\\e-commerce\\src\\components\\CheckoutForm\\Checkout\\styles.js",[],"C:\\Users\\My PC\\Desktop\\e-commerce\\src\\components\\CheckoutForm\\AddressForm.jsx",["84","85"],"import React, {useEffect, useState} from 'react';\r\nimport { InputLabel, Select, MenuItem, Button, Grid, Typography, Link} from \"@material-ui/core\";\r\nimport FormInput from \"./CustomTextField\";\r\nimport {FormProvider, useForm} from \"react-hook-form\";\r\n\r\nimport {commerce} from \"../../lib/commerce\";\r\n\r\n\r\nconst AddressForm = ({ checkoutToken, test }) => {\r\n    const [shippingCountries, setShippingCountries] = useState([]);\r\n    const [shippingCountry, setShippingCountry] = useState('');\r\n    const [shippingSubdivisions, setShippingSubdivisions] = useState([]);\r\n    const [shippingSubdivision, setShippingSubdivision] = useState('');\r\n    const [shippingOptions, setShippingOptions] = useState([]);\r\n    const [shippingOption, setShippingOption] = useState('');\r\n    const methods = useForm();\r\n\r\n    const fetchShippingCountries = async (checkoutTokenId) => {\r\n        const { countries } = await commerce.services.localeListShippingCountries(checkoutTokenId);\r\n\r\n        setShippingCountries(countries);\r\n        setShippingCountry(Object.keys(countries)[0]);\r\n    };\r\n\r\n    const fetchSubdivisions = async (countryCode) => {\r\n        const { subdivisions } = await commerce.services.localeListSubdivisions(countryCode);\r\n\r\n        setShippingSubdivisions(subdivisions);\r\n        setShippingSubdivision(Object.keys(subdivisions)[0]);\r\n    };\r\n\r\n    const fetchShippingOptions = async (checkoutTokenId, country, stateProvince = null) => {\r\n        const options = await commerce.checkout.getShippingOptions(checkoutTokenId, { country, region: stateProvince });\r\n\r\n        setShippingOptions(options);\r\n        setShippingOption(options[0].id);\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchShippingCountries(checkoutToken.id);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (shippingCountry) fetchSubdivisions(shippingCountry);\r\n    }, [shippingCountry]);\r\n\r\n    useEffect(() => {\r\n        if (shippingSubdivision) fetchShippingOptions(checkoutToken.id, shippingCountry, shippingSubdivision);\r\n    }, [shippingSubdivision]);\r\n\r\n    return (\r\n        <>\r\n            <Typography variant=\"h6\" gutterBottom>Shipping address</Typography>\r\n            <FormProvider {...methods}>\r\n                <form onSubmit={methods.handleSubmit((data) => test({ ...data, shippingCountry, shippingSubdivision, shippingOption }))}>\r\n                    <Grid container spacing={3}>\r\n                        <FormInput name='firstName' label='Ism'/>\r\n                        <FormInput name='lastName' label='Familiya'/>\r\n                        <FormInput name='address' label='Addres'/>\r\n                        <FormInput name='email' label='Email'/>\r\n                        <FormInput name='city' label='Shahar'/>\r\n                        <FormInput name='zip' label='ZIP/ Pochta kodi'/>\r\n\r\n                        <Grid item xs={12} sm={6}>\r\n                            <InputLabel>Shipping Country</InputLabel>\r\n                            <Select value={shippingCountry} fullWidth onChange={(e) => setShippingCountry(e.target.value)}>\r\n                                {Object.entries(shippingCountries).map(([code, name]) => ({ id: code, label: name })).map((item) => (\r\n                                    <MenuItem key={item.id} value={item.id}>\r\n                                        {item.label}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <InputLabel>Shipping Subdivision</InputLabel>\r\n                            <Select value={shippingSubdivision} fullWidth onChange={(e) => setShippingSubdivision(e.target.value)}>\r\n                                {Object.entries(shippingSubdivisions).map(([code, name]) => ({ id: code, label: name })).map((item) => (\r\n                                    <MenuItem key={item.id} value={item.id}>\r\n                                        {item.label}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <InputLabel>Shipping Options</InputLabel>\r\n                            <Select value={shippingOption} fullWidth onChange={(e) => setShippingOption(e.target.value)}>\r\n                                {shippingOptions.map((sO) => ({ id: sO.id, label: `${sO.description} - (${sO.price.formatted_with_symbol})` })).map((item) => (\r\n                                    <MenuItem key={item.id} value={item.id}>\r\n                                        {item.label}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <br />\r\n                    <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                        <Button component={Link} variant=\"outlined\" to=\"/cart\">Buyurtmalarga qaytish</Button>\r\n                        <Button type=\"submit\" variant=\"contained\" color=\"primary\">Keyingi</Button>\r\n                    </div>\r\n                </form>\r\n            </FormProvider>\r\n        </>\r\n    );\r\n};\r\nexport default AddressForm;","C:\\Users\\My PC\\Desktop\\e-commerce\\src\\components\\CheckoutForm\\PaymentForm.jsx",[],"C:\\Users\\My PC\\Desktop\\e-commerce\\src\\components\\CheckoutForm\\CustomTextField.jsx",[],"C:\\Users\\My PC\\Desktop\\e-commerce\\src\\components\\CheckoutForm\\Review.jsx",[],"C:\\Users\\My PC\\Desktop\\e-commerce\\src\\components\\Cart\\CartItems\\styles.js",[],{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":36,"column":8,"nodeType":"92","endLine":36,"endColumn":14,"suggestions":"93"},{"ruleId":"90","severity":1,"message":"94","line":41,"column":8,"nodeType":"92","endLine":41,"endColumn":10,"suggestions":"95"},{"ruleId":"90","severity":1,"message":"96","line":49,"column":8,"nodeType":"92","endLine":49,"endColumn":29,"suggestions":"97"},"no-native-reassign",["98"],"no-negated-in-lhs",["99"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["100"],"React Hook useEffect has a missing dependency: 'checkoutToken.id'. Either include it or remove the dependency array.",["101"],"React Hook useEffect has missing dependencies: 'checkoutToken.id' and 'shippingCountry'. Either include them or remove the dependency array.",["102"],"no-global-assign","no-unsafe-negation",{"desc":"103","fix":"104"},{"desc":"105","fix":"106"},{"desc":"107","fix":"108"},"Update the dependencies array to be: [cart, history]",{"range":"109","text":"110"},"Update the dependencies array to be: [checkoutToken.id]",{"range":"111","text":"112"},"Update the dependencies array to be: [checkoutToken.id, shippingCountry, shippingSubdivision]",{"range":"113","text":"114"},[1337,1343],"[cart, history]",[1737,1739],"[checkoutToken.id]",[2006,2027],"[checkoutToken.id, shippingCountry, shippingSubdivision]"]